package com.example.myapplication.contracts;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/hyperledger/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.6.1.
 */
@SuppressWarnings("rawtypes")
public class DataRegistry extends Contract {
    public static final String BINARY = "{\r\n"
            + "\t\"functionDebugData\": {},\r\n"
            + "\t\"generatedSources\": [],\r\n"
            + "\t\"linkReferences\": {},\r\n"
            + "\t\"object\": \"608060405234801561001057600080fd5b50610a4a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637ba097591461003b578063f707213d14610059575b600080fd5b610043610075565b60405161005091906104c8565b60405180910390f35b610073600480360381019061006e9190610633565b610234565b005b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561022b5783829060005260206000209060020201604051806040016040529081600082018054610108906106da565b80601f0160208091040260200160405190810160405280929190818152602001828054610134906106da565b80156101815780601f1061015657610100808354040283529160200191610181565b820191906000526020600020905b81548152906001019060200180831161016457829003601f168201915b5050505050815260200160018201805461019a906106da565b80601f01602080910402602001604051908101604052809291908181526020018280546101c6906106da565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b505050505081525050815260200190600101906100d5565b50505050905090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528084815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816102c591906108c1565b5060208201518160010190816102db91906108c1565b5050503373ffffffffffffffffffffffffffffffffffffffff167f4897cd635168a00687f7326b525c03309f8b79d89beadb125fcd252afdb95efa83836040516103269291906109dd565b60405180910390a25050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561039857808201518184015260208101905061037d565b60008484015250505050565b6000601f19601f8301169050919050565b60006103c08261035e565b6103ca8185610369565b93506103da81856020860161037a565b6103e3816103a4565b840191505092915050565b6000604083016000830151848203600086015261040b82826103b5565b9150506020830151848203602086015261042582826103b5565b9150508091505092915050565b600061043e83836103ee565b905092915050565b6000602082019050919050565b600061045e82610332565b610468818561033d565b93508360208202850161047a8561034e565b8060005b858110156104b657848403895281516104978582610432565b94506104a283610446565b925060208a0199505060018101905061047e565b50829750879550505050505092915050565b600060208201905081810360008301526104e28184610453565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610540826103a4565b810181811067ffffffffffffffff8211171561055f5761055e610508565b5b80604052505050565b60006105726104ea565b905061057e8282610537565b919050565b600067ffffffffffffffff82111561059e5761059d610508565b5b6105a7826103a4565b9050602081019050919050565b82818337600083830152505050565b60006105d66105d184610583565b610568565b9050828152602081018484840111156105f2576105f1610503565b5b6105fd8482856105b4565b509392505050565b600082601f83011261061a576106196104fe565b5b813561062a8482602086016105c3565b91505092915050565b6000806040838503121561064a576106496104f4565b5b600083013567ffffffffffffffff811115610668576106676104f9565b5b61067485828601610605565b925050602083013567ffffffffffffffff811115610695576106946104f9565b5b6106a185828601610605565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106f257607f821691505b602082108103610705576107046106ab565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261076d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610730565b6107778683610730565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006107be6107b96107b48461078f565b610799565b61078f565b9050919050565b6000819050919050565b6107d8836107a3565b6107ec6107e4826107c5565b84845461073d565b825550505050565b600090565b6108016107f4565b61080c8184846107cf565b505050565b5b81811015610830576108256000826107f9565b600181019050610812565b5050565b601f821115610875576108468161070b565b61084f84610720565b8101602085101561085e578190505b61087261086a85610720565b830182610811565b50505b505050565b600082821c905092915050565b60006108986000198460080261087a565b1980831691505092915050565b60006108b18383610887565b9150826002028217905092915050565b6108ca8261035e565b67ffffffffffffffff8111156108e3576108e2610508565b5b6108ed82546106da565b6108f8828285610834565b600060209050601f83116001811461092b5760008415610919578287015190505b61092385826108a5565b86555061098b565b601f1984166109398661070b565b60005b828110156109615784890151825560018201915060208501945060208101905061093c565b8683101561097e578489015161097a601f891682610887565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b60006109af8261035e565b6109b98185610993565b93506109c981856020860161037a565b6109d2816103a4565b840191505092915050565b600060408201905081810360008301526109f781856109a4565b90508181036020830152610a0b81846109a4565b9050939250505056fea2646970667358221220d1fd20d7fbb44208e4c196a7306ccd3ae0da81a5d1f9d1f8ef08e4790ee8be6e64736f6c63430008140033\",\r\n"
            + "\t\"opcodes\": \"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BA09759 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF707213D EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x22B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x108 SWAP1 PUSH2 0x6DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x134 SWAP1 PUSH2 0x6DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x181 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x156 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x181 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x164 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x19A SWAP1 PUSH2 0x6DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C6 SWAP1 PUSH2 0x6DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x213 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x213 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x8C1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x8C1 JUMP JUMPDEST POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4897CD635168A00687F7326B525C03309F8B79D89BEADB125FCD252AFDB95EFA DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x326 SWAP3 SWAP2 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x398 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0 DUP3 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x3CA DUP2 DUP6 PUSH2 0x369 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37A JUMP JUMPDEST PUSH2 0x3E3 DUP2 PUSH2 0x3A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x40B DUP3 DUP3 PUSH2 0x3B5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x425 DUP3 DUP3 PUSH2 0x3B5 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E DUP4 DUP4 PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E DUP3 PUSH2 0x332 JUMP JUMPDEST PUSH2 0x468 DUP2 DUP6 PUSH2 0x33D JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x47A DUP6 PUSH2 0x34E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x497 DUP6 DUP3 PUSH2 0x432 JUMP JUMPDEST SWAP5 POP PUSH2 0x4A2 DUP4 PUSH2 0x446 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E2 DUP2 DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x540 DUP3 PUSH2 0x3A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x508 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x572 PUSH2 0x4EA JUMP JUMPDEST SWAP1 POP PUSH2 0x57E DUP3 DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x508 JUMP JUMPDEST JUMPDEST PUSH2 0x5A7 DUP3 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D6 PUSH2 0x5D1 DUP5 PUSH2 0x583 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5F2 JUMPI PUSH2 0x5F1 PUSH2 0x503 JUMP JUMPDEST JUMPDEST PUSH2 0x5FD DUP5 DUP3 DUP6 PUSH2 0x5B4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0x4FE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x62A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x4F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x668 JUMPI PUSH2 0x667 PUSH2 0x4F9 JUMP JUMPDEST JUMPDEST PUSH2 0x674 DUP6 DUP3 DUP7 ADD PUSH2 0x605 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x695 JUMPI PUSH2 0x694 PUSH2 0x4F9 JUMP JUMPDEST JUMPDEST PUSH2 0x6A1 DUP6 DUP3 DUP7 ADD PUSH2 0x605 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x705 JUMPI PUSH2 0x704 PUSH2 0x6AB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x76D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x777 DUP7 DUP4 PUSH2 0x730 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BE PUSH2 0x7B9 PUSH2 0x7B4 DUP5 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D8 DUP4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x7EC PUSH2 0x7E4 DUP3 PUSH2 0x7C5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x73D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x801 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x80C DUP2 DUP5 DUP5 PUSH2 0x7CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x830 JUMPI PUSH2 0x825 PUSH1 0x0 DUP3 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x812 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x875 JUMPI PUSH2 0x846 DUP2 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x84F DUP5 PUSH2 0x720 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x85E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x872 PUSH2 0x86A DUP6 PUSH2 0x720 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x811 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x898 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x87A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 DUP4 DUP4 PUSH2 0x887 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8CA DUP3 PUSH2 0x35E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E3 JUMPI PUSH2 0x8E2 PUSH2 0x508 JUMP JUMPDEST JUMPDEST PUSH2 0x8ED DUP3 SLOAD PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x8F8 DUP3 DUP3 DUP6 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x92B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x919 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x923 DUP6 DUP3 PUSH2 0x8A5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x939 DUP7 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x961 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x93C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x97E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x97A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x887 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AF DUP3 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x9B9 DUP2 DUP6 PUSH2 0x993 JUMP JUMPDEST SWAP4 POP PUSH2 0x9C9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x37A JUMP JUMPDEST PUSH2 0x9D2 DUP2 PUSH2 0x3A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9F7 DUP2 DUP6 PUSH2 0x9A4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA0B DUP2 DUP5 PUSH2 0x9A4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 REVERT KECCAK256 0xD7 0xFB 0xB4 TIMESTAMP ADDMOD 0xE4 0xC1 SWAP7 0xA7 ADDRESS PUSH13 0xCD3AE0DA81A5D1F9D1F8EF08E4 PUSH26 0xEE8BE6E64736F6C634300081400330000000000000000000000 \",\r\n"
            + "\t\"sourceMap\": \"60:726:0:-:0;;;;;;;;;;;;;;;;;;;\"\r\n"
            + "}";

    private static String librariesLinkedBinary;

    public static final String FUNC_SUBMITDATA = "submitData";

    public static final String FUNC_VIEWDATA = "viewData";

    public static final Event DOCUMENTSUBMITTED_EVENT = new Event("DocumentSubmitted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));


    @Deprecated
    protected DataRegistry(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected DataRegistry(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected DataRegistry(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected DataRegistry(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static List<DocumentSubmittedEventResponse> getDocumentSubmittedEvents(
            TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(DOCUMENTSUBMITTED_EVENT, transactionReceipt);
        ArrayList<DocumentSubmittedEventResponse> responses = new ArrayList<DocumentSubmittedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            DocumentSubmittedEventResponse typedResponse = new DocumentSubmittedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.name = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.hash = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public static DocumentSubmittedEventResponse getDocumentSubmittedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DOCUMENTSUBMITTED_EVENT, log);
        DocumentSubmittedEventResponse typedResponse = new DocumentSubmittedEventResponse();
        typedResponse.log = log;
        typedResponse.user = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.name = (String) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.hash = (String) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<DocumentSubmittedEventResponse> documentSubmittedEventFlowable(
            EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDocumentSubmittedEventFromLog(log));
    }

    public Flowable<DocumentSubmittedEventResponse> documentSubmittedEventFlowable(
            DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DOCUMENTSUBMITTED_EVENT));
        return documentSubmittedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> submitData(String _name, String _hash) {
        final Function function = new Function(
                FUNC_SUBMITDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> viewData() {
        final Function function = new Function(FUNC_VIEWDATA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Document>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    @Deprecated
    public static DataRegistry load(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new DataRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static DataRegistry load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new DataRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static DataRegistry load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new DataRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static DataRegistry load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new DataRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<DataRegistry> deploy(Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DataRegistry.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<DataRegistry> deploy(Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DataRegistry.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static RemoteCall<DataRegistry> deploy(Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DataRegistry.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<DataRegistry> deploy(Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DataRegistry.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

//    public static void linkLibraries(List<Contract.LinkReference> references) {
//        librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
//    }

    private static String getDeploymentBinary() {
        if (librariesLinkedBinary != null) {
            return librariesLinkedBinary;
        } else {
            return BINARY;
        }
    }

    public static class Document extends DynamicStruct {
        public String name;

        public String hash;

        public Document(String name, String hash) {
            super(new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.Utf8String(hash));
            this.name = name;
            this.hash = hash;
        }

        public Document(Utf8String name, Utf8String hash) {
            super(name, hash);
            this.name = name.getValue();
            this.hash = hash.getValue();
        }
    }

    public static class DocumentSubmittedEventResponse extends BaseEventResponse {
        public String user;

        public String name;

        public String hash;
    }
}
